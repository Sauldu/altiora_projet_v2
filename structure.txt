altiora_projet_v2/
|-- .gitignore                                               # Fichiers et dossiers à ignorer par Git
|-- Altiora.md                                               # Documentation générale du projet Altiora
|-- export.py                                                # Script pour exporter des données ou des modèles
|-- pytest.ini                                               # Fichier de configuration pour Pytest
|-- README.md                                                # Fichier d'information principal du projet
|-- requirements.txt                                         # Liste des dépendances Python du projet
|-- structure.txt                                            # Description de la structure du projet (ce fichier)
|
|-- .github/                                                 # 📁 Configuration pour GitHub
|   \---workflows/                                            # 📁 Workflows d'intégration continue (CI/CD)
|       \---ci.yml                                           # Workflow pour le déploiement et les tests automatisés
|
|-- anythingllm/                                             # 📁 Configuration et prompts pour AnythingLLM
|   |-- datasources_priority.md                              # Priorité des sources de données pour AnythingLLM
|   |-- embedding_config.json                                # Configuration des embeddings
|   |-- workspace_config.json                                # Configuration de l'espace de travail AnythingLLM
|   |-- agents/                                              # 📁 Agents configurés pour des tâches spécifiques
|   |-- chat_templates/                                      # 📁 Modèles de chat pour différents contextes
|   |-- legacy/                                              # 📁 Anciens fichiers ou configurations
|   \---prompts/                                             # 📁 Prompts pour les modèles de langage
|
|-- app/                                                     # 📁 Services applicatifs légers
|   |-- gateway/                                             # 📁 Passerelle API pour les services
|   |-- model_swapper/                                       # 📁 Service pour changer de modèle à la volée
|   \---rag_service/                                         # 📁 Service RAG (Retrieval-Augmented Generation)
|
|-- backend/                                                 # 🎯 Logique principale de l'application backend
|   |-- __init__.py                                          # Initialiseur du package backend
|   |-- altiora/                                             # 📁 Cœur de l'application Altiora
|   |   |-- __init__.py                                      # Initialiseur du package Altiora
|   |   |-- __version__.py                                   # Version de l'application
|   |   |-- api/                                             # 📁 API FastAPI
|   |   |-- config/                                          # 📁 Configuration de l'application
|   |   |-- core/                                            # 📁 Logique métier principale
|   |   |-- infrastructure/                                  # 📁 Infrastructure (BDD, cache, etc.)
|   |   |-- monitoring/                                      # 📁 Surveillance et métriques
|   |   |-- security/                                        # 🔐 Sécurité, authentification, gardes-fous
|   |   |-- services/                                        # 📦 Clients pour les micro-services externes
|   |   \---utils/                                           # 📁 Utilitaires partagés
|   \---tests/                                               # 🧪 Suite de tests du projet
|       |-- __init__.py                                      # Initialiseur du package tests
|       |-- conftest.py                                      # Fixtures et configuration pour Pytest
|       |-- test_admin_control.py                            # Tests pour le système de contrôle admin
|       |-- test_altiora_core.py                             # Tests pour le noyau de la personnalité
|       |-- test_ethical_safeguards.py                       # Tests pour les garde-fous éthiques
|       |-- test_fine_tuning.py                              # Tests pour le processus de fine-tuning
|       |-- test_integration.py                              # Tests d'intégration généraux
|       |-- test_interfaces.py                               # Tests pour les interfaces des modèles
|       |-- test_model_swapper.py                            # Tests pour le changement de modèle
|       |-- test_model_swapper_failures.py                   # Tests des échecs du changement de modèle
|       |-- test_ocr_wrapper.py                              # Tests pour le wrapper OCR
|       |-- test_orchestrator.py                             # Tests pour l'orchestrateur
|       |-- test_personality_quiz.py                         # Tests pour le quiz de personnalité
|       |-- test_playwright_runner.py                        # Tests pour l'exécuteur Playwright
|       |-- test_retry_handler.py                            # Tests pour le gestionnaire de tentatives
|       |-- test_services.py                                 # Tests pour les micro-services
|       |-- integration/                                     # 📁 Tests d'intégration
|       |-- performance/                                     # 📁 Tests de performance et de charge
|       \---regression/                                      # 📁 Tests de régression
|
|-- cli/                                                     # 📁 Interface en ligne de commande
|   |-- requirements.txt                                     # Dépendances spécifiques au CLI
|   |-- setup.py                                             # Script d'installation du CLI
|   \---altiora_cli/                                         # 📁 Code source du CLI
|
|-- configs/                                                 # 📁 Fichiers de configuration centralisés
|   \---prometheus.yml                                       # Configuration pour la surveillance avec Prometheus
|
|-- data/                                                    # 📁 Données utilisées par l'application
|   |-- models/                                              # 📁 Modèles de machine learning sauvegardés
|   |-- scenarios/                                           # 📁 Scénarios de test ou d'utilisation
|   |-- temp/                                                # 📁 Fichiers de données temporaires
|   \---training/                                            # 📁 Données pour l'entraînement des modèles
|
|-- docker/                                                  # 📁 Fichiers de configuration Docker
|   |-- docker-compose.yml                                   # Définition des services pour Docker Compose
|   |-- Dockerfile                                           # Instructions pour construire l'image Docker principale
|   |-- Dockerfile.anythingllm                               # Dockerfile pour le service AnythingLLM
|   \---Dockerfile.services                                  # Dockerfile pour les autres services
|
|-- docs/                                                    # 📁 Documentation du projet
|   |-- ADVANCED_CONFIGURATION.md                            # Guide de configuration avancée
|   |-- API_REFERENCE.md                                     # Référence de l'API
|   |-- ARCHITECTURE.md                                      # Description de l'architecture globale
|   |-- conf.py                                              # Configuration pour Sphinx (générateur de docs)
|   |-- DEVELOPER_GUIDE.md                                   # Guide pour les développeurs
|   |-- env-documentation.md                                 # Documentation des variables d'environnement
|   |-- generate_docs.py                                     # Script pour générer la documentation
|   |-- installation_guide.md                                # Guide d'installation
|   |-- Makefile                                             # Commandes pour la documentation
|   |-- MODEL_TRAINING.md                                    # Guide pour l'entraînement des modèles
|   |-- requirements.txt                                     # Dépendances pour la documentation
|   |-- api/                                                 # 📁 Documentation de l'API générée
|   |-- examples/                                            # 📁 Exemples d'utilisation
|   \---source/                                              # 📁 Source pour la documentation Sphinx
|
|-- logs/                                                    # 📁 Fichiers de logs de l'application
|
|-- models/                                                  # 📁 Modèles de données ou schémas (non-ML)
|
|-- requirements/                                            # 📁 Listes de dépendances Python
|   |-- base.txt                                             # Dépendances de base
|   |-- dev.txt                                              # Dépendances pour le développement
|   \---prod.txt                                             # Dépendances pour la production
|
|-- scripts/                                                 # 🛠️ Scripts utilitaires
|   |-- build_docs.py                                        # Script pour générer la documentation
|   |-- manage_dev_env.py                                    # Script pour gérer l'environnement de développement
|   |-- backup/                                              # 📁 Scripts de sauvegarde
|   |-- models/                                              # 📁 Scripts liés aux modèles
|   |-- monitoring/                                          # 📁 Scripts de surveillance
|   |-- setup/                                               # 📁 Scripts de configuration de l'environnement
|   \---training/                                            # 📁 Scripts d'entraînement
|
\---temp/                                                    # 📁 Fichiers et dossiers temporaires
