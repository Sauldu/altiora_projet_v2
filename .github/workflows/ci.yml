# .github/workflows/ci.yml
name: ci

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - run: pip install -r requirements.txt
      - run: pytest --cov=altiora --cov-report=xml
      - uses: codecov/codecov-action@v4

  scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t altiora .
      - name: Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: altiora
          format: sarif
          output: trivy.sarif
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy.sarif
      - name: Generate SBOM
        run: |
          docker run --rm -v "$PWD":/out aquasec/trivy image --format spdx-json --output /out/sbom.spdx altiora

  health:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
      ollama:
        image: ollama/ollama:latest
        ports: ["11434:11434"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip
      - run: pip install -r requirements.txt
      - name: Start stack
        run: docker compose up -d
      - name: Wait for services
        run: |
          for i in {1..30}; do
            curl -f http://localhost:8000/health && break || sleep 2
          done
      - name: Run health check
        run: |
          curl -f http://localhost:8000/health | jq .